---
- name: labScript
  hosts: localhost
  gather_facts: false

  collections:
    - davidban77.gns3

  tasks:
    # # we want to install the gns3fy pip package only if it's not installed.  get a list of installed pips
    # - community.general.pip_package_info:
    #   register: pips
    #   no_log: true
    #   tags: pip 

    # - name: installgns3fy
    #   pip:
    #     name:
    #       - git+https://github.com/davidban77/gns3fy
    #   when: "'gns3fy' not in pips.packages.pip"

    # load in our local variable settings which gives us the gns3 server ip and other sundry variables
    - name: loadLocalSettings
      ansible.builtin.include_vars:
        file: "vars/local.yml"
      no_log: false
      tags: test 

    # because we can't set and use a variable in the same set_fact we need to have a separate task
    #   to default these values - these are commands we can set from --extra-vars or "e" on the command line
    - name: setImageType
      set_fact:
        imageType: "{{ imageType | default('veos') }}"
        mgmtImageType: "{{ builtinType | default('builtin') }}"
        execute: "{{ execute | default('create') }}"
      # no_log: True
      #comment out execute above, then delete this comment  
      tags: test

    # pull out a single image from the images dict loaded from local.yml
    - name: chooseStdImage
      set_fact:
        std_image: "{{ std_images[imageType] }}"
      no_log: false
      tags: test 

    - name: chooseMgmtImage
      set_fact:
        mgmt_image: "{{ mgmt_images[mgmtImageType] }}"
      no_log: false
      tags: test 

    - name: debug image 
      debug:  
        msg: 
          - "{{ std_image }}" 
          - "{{ mgmt_image }}"
      tags: test


    # load the lab and fill in any variable substituions
    - name: loadLab
      ansible.builtin.include_vars:
        file: "labs/{{ lab }}.yml"
      # no_log: true

    - name: Operation
      debug:
        msg: "Running {{ execute }} for Lab: {{ gns3_project_name }}"

    # call the right role to either create or delete the lab
    - name: create
      when: execute == "create"
      import_role:
        name: create_lab

    - name: delete
      when: execute == "delete"
      block:
        - import_role:
            name: delete_lab

      #let's load up some configurations - doesn't work with veos - must use ceos
    # - name: loadSwitchConfiguration
    #   gns3_node_file:
    #     url: "{{ gns3_url }}"
    #     port: "{{ gns3_port }}"
    #     project_name: "{{ gns3_project_name }}"
    #     node_name: "{{ item.name }}"
    #     dest: "mnt/flash/startup-config"
    #     data: "{{ lookup('template', 'labs/'+lab+'/'+item.name+'.j2') }}"
    #   loop: "{{ gns3_nodes_spec }}"
    #   loop_control:
    #     label: "startup config for {{ item.name }}"


    # - name: loadOSConfiguration
    #   gns3_node_file:
    #     url: "{{ gns3_url }}"
    #     port: "{{ gns3_port }}"
    #     project_name: "{{ gns3_project_name }}"
    #     node_name: "{{ item.name }}"
    #     dest: "mnt/flash/{{ image.type }}-config"
    #     data: "{{ lookup('template', 'labs/'+lab+'/eos-config.j2') }}"
    #   loop: "{{ gns3_nodes_spec }}"
    #   loop_control:
    #     label: "{{ image.type }} config for {{ item.name }}"

        # - name: renameInterfaces
        #   gns3_node_file:
        #     url: "{{ gns3_url }}"
        #     port: "{{ gns3_port }}"
        #     project_name: "{{ gns3_project_name }}"
        #     node_name: "{{ item.name }}"
        #     dest: "mnt/flash/renameInterfaces.sh"
        #     data: "{{ lookup('template', 'labs/'+lab+'/renameInterfaces.sh') }}"
        #   loop: "{{ gns3_nodes_spec }}"
        #   loop_control:
        #     label: "renameInterfaces for {{ item.name }}"
        #   when: image.type == "ceos"



